#+Title: Install and configure IPython notebooks server 
#+Date: Tuesday, August 3, 2016
#+Author: VLEAD Systems team 

* Introduction 
  This document reveals the steps to install and  set up an IPython notebook 
  server. 

* System configuration used 
  + OS    -  Ubuntu 14.04 LTS 
  + RAM   -  4 GB
  + HDD   -  8 GB

* Installation steps 
  + Install basic system packages ::
    #+BEGIN_SRC commands 
    sudo apt-get update
    sudo apt-get install build-essential
    sudo apt-get install binutils 
    sudo apt-get install binutils-doc 
    sudo apt-get install python-dev python3-dev
    sudo apt-get install python-pip
    sudo apt-get intall git emacs 
    sudo reboot
    sudo apt-get install automake 
    sudo apt-get install libblas­dev
    sudo apt-get install autoconf flex bison
    sudo apt-get install libjpeg-dev libfreetype6-dev 
    sudo apt-get install zlib1g-dev
    sudo apt-get install libssl­dev
    sudo apt-get install python3-pip
    sudo apt-get install gcc g++
    sudo apt-get install ngnix 
    sudo apt-get install supervisor 
    sudo apt-get install libfreetype6-dev libxft-dev
    sudo reboot 
    sudo apt-get install libboost­all­dev
    sudo apt-get install cython
    sudo apt-get install liblapack­dev libatlas­base­dev
    sudo apt-get install liblapack­dev liblapack3
    sudo apt-get install gfortran
    sudo reboot  
    sudo apt-get install libssl­dev
    sudo apt-get install curl 
    sudo apt-get install feedgnuplot gnuplot­doc
    sudo apt-get install libdom4j­java­doc libjdom1­java­doc
    sudo reboot
    sudo apt-get install cmake­curses­gui libpthread­stubs0­dev
    sudo apt-get install python2.7­dev
    sudo apt-get install python­gnuplot
    #+END_SRC

  + Install node js ::
    #+BEGIN_SRC command
    sudo apt-get install npm nodejs-legacy
    #+END_SRC

  + Install jupyterhub and jupyter ::
    #+BEGIN_SRC command
    pip3 install pyzmq
    npm install -g congfigurable-http-proxy
    pip3 install jupyterhub
    pip3 install --upgrade notebook
    sudo reboot
    #+END_SRC
  
  + Install required python packages ::
    #+BEGIN_SRC command
    sudo pip3 install matplotlib
    sudo pip3 install numpy
    sudo pip3 install scipy
    sudo pip3 install pandas
    sudo pip3 install theano
    sudo pip3 install sympy
    sudo pip3 install watermark 
    sudo pip3 install pexpect
    sudo pip3 install pickleshare 
    sudo pip3 install simplegeneric
    sudo reboot
    #+END_SRC

  + Install Java 8 ::
    #+BEGIN_SRC command 
    sudo apt­add­repository ppa:webupd8team/java
    sudo apt­get update
    sudo apt­get install oracle­java8­installer
    sudo reboot
    #+END_SRC
   
  + Set JAVA_HOME ::
    + Open file 
    #+BEGIN_SRC command
     sudo vim /etc/profile.d/oraclejdk.sh
    #+END_SRC
    + Copy the below contents in the file 
    #+BEGIN_SRC command
          export J2SDKDIR=/usr/lib/jvm/oracle_jdk8
          export J2REDIR=/usr/lib/jvm/oracle_jdk8/jre
          export PATH=$PATH:/usr/lib/jvm/oracle_jdk8/bin:/usr/lib/jvm/oracle_jdk8/db/bin:/usr/lib/jvm/oracle_jdk8/jre/bin
          export JAVA_HOME=/usr/lib/jvm/oracle_jdk8
          export DERBY_HOME=/usr/lib/jvm/oracle_jdk8/db
    #+END_SRC
    + Reboot your machine 
    #+BEGIN_SRC command
    sudo reboot 
    #+END_SRC
 
  + Give a domain name to your server :: 

  + Configure Ngninx ::
    + Open file 
    #+BEGIN_SRC command 
    sudo vim /etc/nginx/sites-enabled/default
    #+END_SRC
    + Add the following in location / section
    #+BEGIN_SRC command
    location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
        #       try_files $uri $uri/ =404;
                # Uncomment to enable naxsi on this location
                # include /etc/nginx/naxsi.rules
               # root   html;
            # index  index.html index.htm;

            proxy_pass http://127.0.0.1:8000/;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header X-NginX-Proxy true;

            add_header 'Access-Control-Allow-Origin' '*';
            # proxy_pass  http://picominer-backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

    #+END_SRC 
    + Change the following 
    #+BEGIN_SRC command 
     # Make site accessible from http://localhost/
     server_name notebook.vlabs.ac.in;
    #+END_SRC
  
  + Restart nginix service ::
    #+BEGIN_SRC command
    sudo service ngnix restart
    #+END_SRC  

  + Run jupyter hub ::
    Run jupyter hub and check if you are able to see login page on given <domain-name>:<port>
    #+BEGIN_SRC command
    jupyterhub --no-ssl 
    #+END_SRC 
  
  + Make a directory in your home directory ::
    Make a directory in users home directory (exmaple in /home/ubuntu) to keep notebooks
    #+BEGIN_SRC command
    cd /home/ubuntu
    mkdir notebook-dir
    vim vlabs-supervisor.conf
    #+END_SRC

  + Copy the following contents in the following contents in the file vlabs-supervisor.conf ::
    #+BEGIN_SRC command
    [program:vlabsnodehook]
    command=sudo jupyterhub --no-ssl
    directory=/home/ubuntu/notebook
    autostart=true
    autorestart=true
    startretries=3
    stderr_logfile=/var/log/webhooks/vlabsnodehook.err.log
    stdout_logfile=/var/log/webhooks/vlabsnodehook.out.log
    #+END_SRC
  
  + Create a directory named webhooks in /var/log  ::
    #+BEGIN_SRC command
    sudo mkdir /var/log/webhooks
    #+END_SRC

  + Reboot your machine ::
    #+BEGIN_SRC command
    sudo reboot
    #+END_SRC
    
  + Start supervisor and run yournotebook ::
    #+BEGIN_SRC command 
    sudo supervisorctl 
    #+END_SRC 
    + This should take you to "supervisor>" prompt. 
    + Run command "reload" 
    + Run command "status"
    + Output should be as shown below 
      #+BEGIN_SRC command
      ubuntu@ip-172-31-26-147:~/notebook$ sudo supervisorctl
      vlabsnodehook                    RUNNING    pid 1054, uptime 14:40:37
      supervisor> status 
      vlabsnodehook                    RUNNING    pid 1054, uptime 14:40:48
      supervisor> 
      #+END_SRC
      
  + Create users in the notebook server ::
     Create 5 users and give them password  and switch to their home once 
     #+BEGIN_SRC command
     sudo adduser username
     passwd username
     su username 
     #+END_SRC
   
  + Reboot your machine ::
     #+BEGIN_SRC command
     sudo reboot 
     #+END_SRC

  + Access your default notebook on server ::
     #+BEGIN_SRC command
     1. Visit URL of your notebook server 
     2. Login using given username and password 
     3. You must see a default untitled notebook
     #+END_SRC

* Install javascript kernel for ipython noteboks
  - Install ijavascript and it prerequisites by running 
    #+BEGIN_EXAMPLE
    sudo apt-get install libzmq3-dev 
    sudo npm install -g ijavascript
    #+END_EXAMPLE
* Install Python3 kernel
  + Install Python3 Kernel ::
    #+BEGIN_SRC command
    sudo ipython3 kernelspec install-self
    #+END_SRC
    
